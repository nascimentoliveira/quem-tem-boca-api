generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(255)
  username  String   @db.VarChar(255)
  password  String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Establishment {
  id             Int      @id @default(autoincrement())
  name           String   @db.VarChar(255)
  phone          String   @db.VarChar(11)
  address        String   @db.VarChar(255)
  opening        DateTime
  closing        DateTime
  description    String   @db.VarChar(255)
  minTicket      Int
  minServiceTime Int
  maxServiceTime Int
  avatarUrl      String   @db.VarChar(255)
  bannerUrl      String   @db.VarChar(255)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  dishes Dish[]
  drinks Drink[]

  @@map("establishments")
}

model Dish {
  id              Int      @id @default(autoincrement())
  name            String   @db.VarChar(255)
  description     String?  @db.VarChar(255)
  imageUrl        String   @db.VarChar(255)
  price           Int
  establishmentId Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  establishment Establishment @relation(fields: [establishmentId], references: [id])

  @@map("dishes")
}

model Drink {
  id              Int      @id @default(autoincrement())
  name            String   @db.VarChar(255)
  description     String?  @db.VarChar(255)
  imageUrl        String   @db.VarChar(255)
  price           Int
  establishmentId Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  establishment Establishment @relation(fields: [establishmentId], references: [id])

  @@map("drinks")
}
